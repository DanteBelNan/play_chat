name: CI/CD - Build and Push to AWS ECR

on:
  push:
    branches:
      - main # Se dispara con cada push a la rama main

env:
  # Variables de entorno globales
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: 222634383515 # <<-- ¡REEMPLAZAR CON TU ID DE CUENTA!
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        # Usa las variables secretas para autenticar el entorno de la action con AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        # Autentica Docker para que pueda pushear al registro privado
        uses: aws-actions/amazon-ecr-login@v2
      
      # ----------------------------------------------------
      # 🛠️ 1. Build & Push: NODE Backend / CLI (backend-chat)
      # ----------------------------------------------------
      - name: Build and push NODE/CLI image
        env:
          ECR_REPOSITORY: backend-chat
          IMAGE_TAG: ${{ github.sha }} 
        run: |
          # Construir la imagen usando el Dockerfile y el contexto correctos
          docker build -t $ECR_REPOSITORY:latest \
                       -t $ECR_REPOSITORY:$IMAGE_TAG \
                       -f docker/Dockerfile.node ./backend

          # Etiquetar con el URI completo de ECR
          ECR_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
          docker tag $ECR_REPOSITORY:latest $ECR_URI:latest
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          
          # Subir imágenes a ECR
          docker push $ECR_URI:latest
          docker push $ECR_URI:$IMAGE_TAG

      # ----------------------------------------------------
      # 🌐 2. Build & Push: NGINX Proxy (nginx-proxy)
      # ----------------------------------------------------
      - name: Build and push NGINX image
        env:
          ECR_REPOSITORY: nginx-proxy
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Construir la imagen usando el Dockerfile y el contexto correctos
          docker build -t $ECR_REPOSITORY:latest \
                       -t $ECR_REPOSITORY:$IMAGE_TAG \
                       -f docker/Dockerfile.nginx ./frontend

          # Etiquetar con el URI completo de ECR
          ECR_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
          docker tag $ECR_REPOSITORY:latest $ECR_URI:latest
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          
          # Subir imágenes a ECR
          docker push $ECR_URI:latest
          docker push $ECR_URI:$IMAGE_TAG